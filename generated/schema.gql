# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ShopeeSetting {
  maxDeviceLogin: Int!
  maxDistinctProductOnOrder: Int!

  """Max product uploaded media size in MB"""
  maxProductUploadedMediaSize: Int!

  """Max uploaded display media quantity for 1 product"""
  maxProductUploadedDisplayMediaQuantity: Int!
}

type User {
  _id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  createById: ID
  updateById: ID
  deleteById: ID
  fullName: String!
  username: String
  email: String
  phoneNumber: String
  actualRole: ActualRole!
  status: UserStatus!
  profileImageId: ID
  coverImageId: ID
  followerIds: [ID!]
  followingIds: [ID!]
  textSearchingHistory: [String!]
  locale: Locale!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum ActualRole {
  Customer
  Seller
  Transporter
}

enum UserStatus {
  Active
  Disabled
}

enum Locale {
  Vietnamese
  EnglishUS
}

type JWT {
  token: String!
  expiresAt: DateTime!
  type: JWTType!
}

enum JWTType {
  AccessToken
  RefreshToken
}

type AuthData {
  accessToken: JWT!
  refreshToken: JWT!
}

type Category {
  _id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  createById: ID
  updateById: ID
  deleteById: ID
  name: String!
  slugs: String!
}

type Media {
  _id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  createById: ID
  updateById: ID
  deleteById: ID
  mimetype: Mimetype!
  originalFileName: String!
  size: Int!
  description: String
  cloudUrl: String!
}

enum Mimetype {
  Png
  Jpeg
  Jpg
  Webp
  Mp4
}

type ProductType {
  name: String!
  thumbnailMedia: Media!
  availableQuantity: Int!
  originalPrice: Float!
  salePrice: Float
}

type Product {
  _id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  createById: ID
  updateById: ID
  deleteById: ID
  name: String!
  description: String!
  tags: [String!]
  slugs: String!
  originalPrice: Float!
  salePrice: Float
  availableQuantity: Int!
  totalSold: Int!
  categoryId: String
  thumbnailMedia: Media!
  displayMediaIds: [ID!]
  types: [ProductType!]
  seller: User
}

type ProductInOrder {
  _id: ID!
  createById: ID!
  name: String!
  thumbnailMedia: Media!
  originalPrice: Int!
  salePrice: Int
}

type OrderDetail {
  product: ProductInOrder!
  type: String
  quantity: Int!
}

type Order {
  _id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  createById: ID
  updateById: ID
  deleteById: ID
  details: [OrderDetail!]!
  status: OrderStatus!
}

enum OrderStatus {
  Pending
  Cancelled
  Shipping
  Done
}

type Query {
  me: User!
  getAccessToken(refreshToken: String!): JWT!
  getMyProducts: [Product!]!
  getProductDetail(id: String!): Product!
  category(id: String!): Category
  categories: [Category!]!
  getMyOrders: [Order!]!
  getShopeeSetting: ShopeeSetting!
}

type Mutation {
  createRegisterRequest(input: CreateRegisterRequest!): Boolean!
  register(input: RegisterInput!): AuthData!
  login(input: LoginInput!): AuthData!
  createLoginOTP(input: CreateLoginOTPInput!): Boolean!
  loginWithOTP(input: LoginWithOTPInput!): AuthData!
  createResetPasswordRequest(input: CreateResetPasswordRequestInput!): Boolean!
  resetPassword(input: ResetPasswordInput!): Boolean!
  changePassword(input: ChangePasswordInput!): Boolean!
  logoutAllDevice: Boolean!
  createProduct(input: CreateProductInput!): Product!
  updateProduct(input: UpdateProductInput!): Boolean!
  createCategory(input: CreateCategoryInput!): Category!
  updateCategory(input: UpdateCategoryInput!): Boolean!
  createOrder(input: CreateOrderInput!): Order!
  updateShopeeSetting(input: UpdateShopeeSettingInput!): Boolean!
}

input CreateRegisterRequest {
  phoneNumber: String!
}

input RegisterInput {
  fullName: String!
  phoneNumber: String!
  password: String!
  otp: String!
  actualRole: ActualRole! = Customer
  locale: Locale! = Vietnamese
}

input LoginInput {
  """It can be email, username or phone number"""
  username: String!
  password: String!
}

input CreateLoginOTPInput {
  phoneNumber: String!
}

input LoginWithOTPInput {
  phoneNumber: String!
  otp: String!
}

input CreateResetPasswordRequestInput {
  phoneNumber: String!
}

input ResetPasswordInput {
  phoneNumber: String!
  otp: String!
  newPassword: String!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input CreateProductInput {
  name: String!
  description: String!
  tags: [String!]
  originalPrice: Float!
  availableQuantity: Int!
  categoryId: ID
  thumbnailMediaId: ID!
  displayMediaIds: [String!]
  types: [ProductTypeInput!]
}

input ProductTypeInput {
  name: String!
  availableQuantity: Float!
  thumbnailMediaId: ID!
  originalPrice: Float
  salePrice: Float
}

input UpdateProductInput {
  name: String
  description: String
  tags: [String!]
  originalPrice: Float
  availableQuantity: Int
  categoryId: ID
  displayMediaIds: [String!]
  types: [ProductTypeInput!]
  id: ID!
}

input CreateCategoryInput {
  name: String!
}

input UpdateCategoryInput {
  name: String
  id: ID!
}

input CreateOrderInput {
  details: [OrderDetailInput!]!
}

input OrderDetailInput {
  productId: String!
  type: String
  quantity: Int! = 1
}

input UpdateShopeeSettingInput {
  maxDeviceLogin: Int
  maxDistinctProductOnOrder: Int
  maxProductUploadedMediaSize: Int
  maxProductUploadedDisplayMediaQuantity: Int
}